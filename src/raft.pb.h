// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: raft.proto

#ifndef PROTOBUF_INCLUDED_raft_2eproto
#define PROTOBUF_INCLUDED_raft_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_raft_2eproto 

namespace protobuf_raft_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_raft_2eproto
class LeaderBeat;
class LeaderBeatDefaultTypeInternal;
extern LeaderBeatDefaultTypeInternal _LeaderBeat_default_instance_;
class VoteReply;
class VoteReplyDefaultTypeInternal;
extern VoteReplyDefaultTypeInternal _VoteReply_default_instance_;
class VoteRequest;
class VoteRequestDefaultTypeInternal;
extern VoteRequestDefaultTypeInternal _VoteRequest_default_instance_;
namespace google {
namespace protobuf {
template<> ::LeaderBeat* Arena::CreateMaybeMessage<::LeaderBeat>(Arena*);
template<> ::VoteReply* Arena::CreateMaybeMessage<::VoteReply>(Arena*);
template<> ::VoteRequest* Arena::CreateMaybeMessage<::VoteRequest>(Arena*);
}  // namespace protobuf
}  // namespace google

// ===================================================================

class VoteRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:VoteRequest) */ {
 public:
  VoteRequest();
  virtual ~VoteRequest();

  VoteRequest(const VoteRequest& from);

  inline VoteRequest& operator=(const VoteRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VoteRequest(VoteRequest&& from) noexcept
    : VoteRequest() {
    *this = ::std::move(from);
  }

  inline VoteRequest& operator=(VoteRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VoteRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VoteRequest* internal_default_instance() {
    return reinterpret_cast<const VoteRequest*>(
               &_VoteRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(VoteRequest* other);
  friend void swap(VoteRequest& a, VoteRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VoteRequest* New() const final {
    return CreateMaybeMessage<VoteRequest>(NULL);
  }

  VoteRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<VoteRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const VoteRequest& from);
  void MergeFrom(const VoteRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VoteRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 term = 1;
  bool has_term() const;
  void clear_term();
  static const int kTermFieldNumber = 1;
  ::google::protobuf::uint32 term() const;
  void set_term(::google::protobuf::uint32 value);

  // required uint32 candidateId = 2;
  bool has_candidateid() const;
  void clear_candidateid();
  static const int kCandidateIdFieldNumber = 2;
  ::google::protobuf::uint32 candidateid() const;
  void set_candidateid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:VoteRequest)
 private:
  void set_has_term();
  void clear_has_term();
  void set_has_candidateid();
  void clear_has_candidateid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 term_;
  ::google::protobuf::uint32 candidateid_;
  friend struct ::protobuf_raft_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VoteReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:VoteReply) */ {
 public:
  VoteReply();
  virtual ~VoteReply();

  VoteReply(const VoteReply& from);

  inline VoteReply& operator=(const VoteReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VoteReply(VoteReply&& from) noexcept
    : VoteReply() {
    *this = ::std::move(from);
  }

  inline VoteReply& operator=(VoteReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VoteReply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VoteReply* internal_default_instance() {
    return reinterpret_cast<const VoteReply*>(
               &_VoteReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(VoteReply* other);
  friend void swap(VoteReply& a, VoteReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VoteReply* New() const final {
    return CreateMaybeMessage<VoteReply>(NULL);
  }

  VoteReply* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<VoteReply>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const VoteReply& from);
  void MergeFrom(const VoteReply& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VoteReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 term = 1;
  bool has_term() const;
  void clear_term();
  static const int kTermFieldNumber = 1;
  ::google::protobuf::uint32 term() const;
  void set_term(::google::protobuf::uint32 value);

  // required bool voteGranted = 2;
  bool has_votegranted() const;
  void clear_votegranted();
  static const int kVoteGrantedFieldNumber = 2;
  bool votegranted() const;
  void set_votegranted(bool value);

  // @@protoc_insertion_point(class_scope:VoteReply)
 private:
  void set_has_term();
  void clear_has_term();
  void set_has_votegranted();
  void clear_has_votegranted();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 term_;
  bool votegranted_;
  friend struct ::protobuf_raft_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LeaderBeat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LeaderBeat) */ {
 public:
  LeaderBeat();
  virtual ~LeaderBeat();

  LeaderBeat(const LeaderBeat& from);

  inline LeaderBeat& operator=(const LeaderBeat& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LeaderBeat(LeaderBeat&& from) noexcept
    : LeaderBeat() {
    *this = ::std::move(from);
  }

  inline LeaderBeat& operator=(LeaderBeat&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LeaderBeat& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LeaderBeat* internal_default_instance() {
    return reinterpret_cast<const LeaderBeat*>(
               &_LeaderBeat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(LeaderBeat* other);
  friend void swap(LeaderBeat& a, LeaderBeat& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LeaderBeat* New() const final {
    return CreateMaybeMessage<LeaderBeat>(NULL);
  }

  LeaderBeat* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LeaderBeat>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LeaderBeat& from);
  void MergeFrom(const LeaderBeat& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LeaderBeat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 term = 1;
  bool has_term() const;
  void clear_term();
  static const int kTermFieldNumber = 1;
  ::google::protobuf::uint32 term() const;
  void set_term(::google::protobuf::uint32 value);

  // required uint32 leaderId = 2;
  bool has_leaderid() const;
  void clear_leaderid();
  static const int kLeaderIdFieldNumber = 2;
  ::google::protobuf::uint32 leaderid() const;
  void set_leaderid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:LeaderBeat)
 private:
  void set_has_term();
  void clear_has_term();
  void set_has_leaderid();
  void clear_has_leaderid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 term_;
  ::google::protobuf::uint32 leaderid_;
  friend struct ::protobuf_raft_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// VoteRequest

// required uint32 term = 1;
inline bool VoteRequest::has_term() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VoteRequest::set_has_term() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VoteRequest::clear_has_term() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VoteRequest::clear_term() {
  term_ = 0u;
  clear_has_term();
}
inline ::google::protobuf::uint32 VoteRequest::term() const {
  // @@protoc_insertion_point(field_get:VoteRequest.term)
  return term_;
}
inline void VoteRequest::set_term(::google::protobuf::uint32 value) {
  set_has_term();
  term_ = value;
  // @@protoc_insertion_point(field_set:VoteRequest.term)
}

// required uint32 candidateId = 2;
inline bool VoteRequest::has_candidateid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VoteRequest::set_has_candidateid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VoteRequest::clear_has_candidateid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VoteRequest::clear_candidateid() {
  candidateid_ = 0u;
  clear_has_candidateid();
}
inline ::google::protobuf::uint32 VoteRequest::candidateid() const {
  // @@protoc_insertion_point(field_get:VoteRequest.candidateId)
  return candidateid_;
}
inline void VoteRequest::set_candidateid(::google::protobuf::uint32 value) {
  set_has_candidateid();
  candidateid_ = value;
  // @@protoc_insertion_point(field_set:VoteRequest.candidateId)
}

// -------------------------------------------------------------------

// VoteReply

// required uint32 term = 1;
inline bool VoteReply::has_term() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VoteReply::set_has_term() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VoteReply::clear_has_term() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VoteReply::clear_term() {
  term_ = 0u;
  clear_has_term();
}
inline ::google::protobuf::uint32 VoteReply::term() const {
  // @@protoc_insertion_point(field_get:VoteReply.term)
  return term_;
}
inline void VoteReply::set_term(::google::protobuf::uint32 value) {
  set_has_term();
  term_ = value;
  // @@protoc_insertion_point(field_set:VoteReply.term)
}

// required bool voteGranted = 2;
inline bool VoteReply::has_votegranted() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VoteReply::set_has_votegranted() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VoteReply::clear_has_votegranted() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VoteReply::clear_votegranted() {
  votegranted_ = false;
  clear_has_votegranted();
}
inline bool VoteReply::votegranted() const {
  // @@protoc_insertion_point(field_get:VoteReply.voteGranted)
  return votegranted_;
}
inline void VoteReply::set_votegranted(bool value) {
  set_has_votegranted();
  votegranted_ = value;
  // @@protoc_insertion_point(field_set:VoteReply.voteGranted)
}

// -------------------------------------------------------------------

// LeaderBeat

// required uint32 term = 1;
inline bool LeaderBeat::has_term() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LeaderBeat::set_has_term() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LeaderBeat::clear_has_term() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LeaderBeat::clear_term() {
  term_ = 0u;
  clear_has_term();
}
inline ::google::protobuf::uint32 LeaderBeat::term() const {
  // @@protoc_insertion_point(field_get:LeaderBeat.term)
  return term_;
}
inline void LeaderBeat::set_term(::google::protobuf::uint32 value) {
  set_has_term();
  term_ = value;
  // @@protoc_insertion_point(field_set:LeaderBeat.term)
}

// required uint32 leaderId = 2;
inline bool LeaderBeat::has_leaderid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LeaderBeat::set_has_leaderid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LeaderBeat::clear_has_leaderid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LeaderBeat::clear_leaderid() {
  leaderid_ = 0u;
  clear_has_leaderid();
}
inline ::google::protobuf::uint32 LeaderBeat::leaderid() const {
  // @@protoc_insertion_point(field_get:LeaderBeat.leaderId)
  return leaderid_;
}
inline void LeaderBeat::set_leaderid(::google::protobuf::uint32 value) {
  set_has_leaderid();
  leaderid_ = value;
  // @@protoc_insertion_point(field_set:LeaderBeat.leaderId)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_raft_2eproto
